# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# In Global.scala, routing is intercepted, and editPost/createPage/etc
# are called, based on the query string (e.g. ?edit=... or ?create-page).

# API calls
# Would be nice to change to <path>?login-simple / ?logout / etcetera,
# so the actual page will be included in the request. Then one would know
# on which page did the user start/end the session. But for now:

# Rare compilation problem tips:
# If there's ever again any impossibly weird error like:
#   [error] /home/kajmagnus/me-dev/debiki/all/debiki-server/conf/routes:14:
#     too many arguments for method apply:
#     (name: String, constraint: String)play.core.DynamicPart in object DynamicPart
#   [error] GET /-/login/:provider  controllers.AppLogin.loginWith(provider, returnToUrl)
# Then, in project/Build.scala, add nonTransitive() to perhaps the play-plugins-mailer
# dependency ? see:
#   https://groups.google.com/forum/?fromgroups=#!topic/play-framework/cVqBvywCs4k

GET   /-/login-popup            controllers.LoginController.showLoginPopup(mode, returnToUrl)
POST  /-/logout                 controllers.LoginController.logout

POST  /-/login-guest            controllers.LoginAsGuestController.loginGuest
POST  /-/login-password         controllers.LoginWithPasswordController.login
POST  /-/login-password-create-user controllers.LoginWithPasswordController.handleCreateUserDialog
GET   /-/login-password-confirm-email controllers.LoginWithPasswordController.confirmEmailAddressAndLogin(confirmationEmailId, returnToUrl)
#GET   /-/api/login-openid       controllers.LoginWithOpenIdController.loginGet
#POST  /-/api/login-openid       controllers.LoginWithOpenIdController.loginPost
#GET   /-/api/login-openid-clbk  controllers.LoginWithOpenIdController.loginCallback(returnToUrl)
GET   /-/login-openauth/:provider controllers.LoginWithOpenAuthController.startAuthentication(provider, returnToUrl)
GET   /-/login-auth-callback/:provider  controllers.LoginWithOpenAuthController.finishAuthentication(provider)
GET   /-/login-oauth-then-return/:provider controllers.LoginWithOpenAuthController.loginThenReturnToOriginalSite(provider, returnToOrigin, xsrfToken)
GET   /-/login-oauth-continue           controllers.LoginWithOpenAuthController.continueAtOriginalSite(oauthDetailsCacheKey, xsrfToken)
POST  /-/login-oauth-create-user  controllers.LoginWithOpenAuthController.handleCreateUserDialog

GET   /-/api/logout             controllers.LoginController.logout
POST  /-/api/logout             controllers.LoginController.logout

GET   /-/embedded-comments      controllers.EmbeddedTopicsController.showTopic
GET   /-/embedded-editor        controllers.EmbeddedTopicsController.showEmbeddedEditor
GET   /-/embedded-comments-help controllers.EmbeddedTopicsController.showSetupInstructions

POST  /-/search/site                        controllers.FullTextSearchController.searchWholeSite()
GET   /-/search/site/for/:phrase            controllers.FullTextSearchController.searchWholeSiteFor(phrase)
POST  /-/search/section/:pageId             controllers.FullTextSearchController.searchSiteSection(pageId)
GET   /-/search/section/:pageId/for/:phrase controllers.FullTextSearchController.searchSiteSectionFor(phrase, pageId)

GET   /-/reset-password                  controllers.ResetPasswordController.start
GET   /-/reset-password/specify-email    controllers.ResetPasswordController.showResetPasswordPage
POST  /-/reset-password/specify-email    controllers.ResetPasswordController.handleResetPasswordForm
GET   /-/reset-password/email-sent       controllers.ResetPasswordController.showEmailSentPage
GET   /-/reset-password/choose-password/:resetPasswordEmailId  controllers.ResetPasswordController.showChooseNewPasswordPage(resetPasswordEmailId)
POST  /-/reset-password/choose-password/:resetPasswordEmailId  controllers.ResetPasswordController.handleNewPasswordForm(resetPasswordEmailId)
GET   /-/reset-password/password-changed controllers.ResetPasswordController.showPasswordChangedPage

GET   /-/create-site            controllers.CreateSiteController.start
POST  /-/create-site            controllers.CreateSiteController.createSite

GET   /-/admin/                 controllers.AdminController.viewAdminPage
# Old admin pages:
GET   /-/admin-old/             controllers.AdminController.viewAdminPageOld

GET   /-/load-site-settings     controllers.SettingsController.loadSiteSettings
GET   /-/load-section-settings  controllers.SettingsController.loadSectionSettings(rootPageId)
POST  /-/save-setting           controllers.SettingsController.saveSetting

GET   /-/terms-of-use           controllers.LegalController.viewTermsOfUsePage
GET   /-/privacy-policy         controllers.LegalController.viewPrivacyPolicyPage
GET   /-/load-special-content   controllers.SpecialContentController.loadContent(rootPageId, contentId)
POST  /-/save-special-content   controllers.SpecialContentController.saveContent

POST  /-/approve                controllers.ModerationController.approve
POST  /-/hide-new-send-pm       controllers.ModerationController.hideNewPostSendPm
POST  /-/hide-flagged-send-pm   controllers.ModerationController.hideFlaggedPostSendPm
POST  /-/delete                 controllers.ModerationController.deletePost
POST  /-/delete-flagged         controllers.ModerationController.deleteFlaggedPost
POST  /-/clear-flags            controllers.ModerationController.clearFlags
POST  /-/reject-edits           controllers.ModerationController.rejectEdits
GET   /-/list-recent-posts      controllers.ModerationController.listRecentPosts

GET   /-/users/                 controllers.UserController.viewUserPage
GET   /-/load-my-page-data      controllers.UserController.loadMyPageData(pageId)
GET   /-/list-user-actions      controllers.UserController.listUserActions(userId)
GET   /-/load-user-info         controllers.UserController.loadUserInfo(userId)
POST  /-/save-page-notf-level   controllers.UserController.savePageNotfLevel
GET   /-/list-usernames         controllers.UserController.listUsernames(pageId, prefix)
GET   /-/load-user-preferences  controllers.UserController.loadUserPreferences(userId)
POST  /-/save-user-preferences  controllers.UserController.saveUserPreferences
GET   /-/list-complete-users    controllers.UserController.listCompleteUsers(whichUsers)
GET   /-/load-complete-user     controllers.UserController.loadCompleteUser(userId)
POST  /-/approve-reject-user    controllers.UserController.approveRejectUser
POST  /-/suspend-user           controllers.UserController.suspendUser
POST  /-/unsuspend-user         controllers.UserController.unsuspendUser

GET   /-/list-invites           controllers.InviteController.listInvites(sentById)
POST  /-/send-invite            controllers.InviteController.sendInvite
GET   /-/accept-invite/:key     controllers.InviteController.acceptInvite(key)

GET   /-/list-topics            controllers.ForumController.listTopics(categoryId)
GET   /-/list-categories        controllers.ForumController.listCategories(forumId)

POST  /-/create-page            controllers.CreatePageController.createPage
POST  /-/reply                  controllers.ReplyController.handleReply
POST  /-/vote                   controllers.VoteController.handleVotes
POST  /-/flag                   controllers.Application.flag
GET   /-/edit                   controllers.EditController.loadCurrentText(pageId, postId)
POST  /-/edit                   controllers.EditController.edit
POST  /-/pin-at-position        controllers.PinController.pinAtPosition
#POST /-/move-pages             controllers.MovePageController.movePages
POST  /-/move-rename-page       controllers.MovePageController.moveRenamePage


POST  /-/collapse-post          controllers.CloseCollapseController.collapsePost
POST  /-/collapse-tree          controllers.CloseCollapseController.collapseTree
POST  /-/close-tree             controllers.CloseCollapseController.closeTree
#POST  /-/reopen-tree            controllers.CloseCollapseController.reopenTree
#POST  /-/load-trees             controllers.LoadPagePartsController.loadTrees
#POST  /-/load-posts             controllers.LoadPagePartsController.loadPosts
#POST  /-/load-replies           controllers.LoadPagePartsController.loadReplies
#POST  /-/load-threads-and-trees controllers.LoadPagePartsController.loadThreadsAndTrees
GET   /-/list-pages             controllers.ListController.listPages
POST  /-/change-page-meta       controllers.PageMetaController.changeMeta

GET  /-/ping-exception-action   controllers.DebugController.pingExceptionAction
GET  /-/ping-session-action     controllers.DebugController.pingSessionAction

GET   /-/site/*file             controllers.SiteAssetBundlesController.at(file)

# Don't change the URL on the next line. The /-/assets/<version-number>/ is
# updated by the deployment script (asset fingerprinting).
GET   /-/assets/68/*file        controllers.Assets.at(path = "/public/res", file)
GET   /robots.txt               controllers.Assets.at(path = "/public", file = "robots.txt")
GET   /-/debiki-embedded-comments.js   controllers.Assets.at(path = "/public/res", file = "embedded-comments.js")
GET   /-/debiki-embedded-comments.css  controllers.Assets.at(path = "/public/res", file = "debiki-embedded-comments.css")
GET   /-/*file                  controllers.Application.assetAt(path = "/public", file)
GET   /favicon.ico              controllers.Assets.at(path = "/public/img", file = "debiki-favicon.ico")
